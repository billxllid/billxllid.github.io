<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Cmder美化与增强]]></title>
    <url>%2F2018%2F06%2F10%2FCmder%E7%BE%8E%E5%8C%96%E4%B8%8E%E5%A2%9E%E5%BC%BA%2F</url>
    <content type="text"><![CDATA[Cmder 配置安装 Chocolatey 包管理安装 Cmder方法 a：Chocolatey方法 b：官网下载 full 版本安装 Powerline 字体安装 Posh-Git 及 Oh-My-Posh安装 Get-ChildItemColor配置 PowerShell 的$PROFILE声明效果图： 安装 Chocolatey 包管理参考： Pimping Up Your PowerShell &amp; Cmder with Posh-Git, Oh-My-Posh, &amp; Powerline Fonts使用管理员身份打开 Powershell，执行下面的命令修改执行权限：1Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force这里 PS 可能会报错，权限除了RemoteSigned还可以改为ByPass、Unrestricted，执行Get-ExecutionPolicy检查当前状态。随后使用下面命令安装 chocolatey：1iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex 安装 Cmder 方法 a：Chocolatey执行下面命令进行安装：1cinst cmder -y这个方法貌似不带 git 等工具，还需要单独安装，我选择方法 b 安装。 方法 b：官网下载 full 版本直接去官网下载。 安装 Powerline 字体运行下面命令：123git clone https://github.com/powerline/fonts.gitcd fonts.\install.ps1但是这个方法安装的是所有字体，比较慢也没有必要，只需要安装这个字体即可。 安装 Posh-Git 及 Oh-My-Posh简介： Posh-Git (PowerShell Git) 主要用于当你进入一个包含 git 项目时，显示项目信息。Oh-My-Posh 则主要用于定义 Posh-Git 的主题。运行下面的命令安装Posh-Git：123Install-PackageProvider NuGet -MinimumVersion '2.8.5.201' -ForceSet-PSRepository -Name PSGallery -InstallationPolicy TrustedInstall-Module -Name 'posh-git'运行下面的命令安装Oh-My-Posh:1Install-Module -Name 'oh-my-posh'可以前往oh-my-posh预览主题。 安装 Get-ChildItemColor简介： 主要用于定义列目录风格，Get-ChildItemColor是传统 PS 风格，Get-ChildItemColorFormatWide是类 Unix 风格，下面配置文件里面也会映射l及ls来替代。运行下面的命令进行安装：1Install-Module -Name 'Get-ChildItemColor' 配置 PowerShell 的$PROFILE这里默认的$PROFILE 是C:\Users\18354\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1，如果修改这个文件会联动到 Powershell，但是我比较习惯只修改 cmder 的配置文件%CMDER_ROOT%\vendor\profile.ps1，只需要在最后追加下面内容即可：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# Ensure that Get-ChildItemColor is loadedImport-Module Get-ChildItemColor# Set l and ls alias to use the new Get-ChildItemColor cmdletsSet-Alias l Get-ChildItemColor -Option AllScopeSet-Alias ls Get-ChildItemColorFormatWide -Option AllScope# Helper function to change directory to my development workspace# Change c:\ws to your usual workspace and everytime you type# in cws from PowerShell it will take you directly there.function cws &#123; Set-Location c:\ws &#125;# Helper function to set location to the User Profile directoryfunction cuserprofile &#123; Set-Location ~ &#125;Set-Alias ~ cuserprofile -Option AllScope# Helper function to show Unicode characterfunction U&#123; param ( [int] $Code ) if ((0 -le $Code) -and ($Code -le 0xFFFF)) &#123; return [char] $Code &#125; if ((0x10000 -le $Code) -and ($Code -le 0x10FFFF)) &#123; return [char]::ConvertFromUtf32($Code) &#125; throw "Invalid character code $Code"&#125;# Ensure posh-git is loadedImport-Module -Name posh-git# Start SshAgent if not already# Need this if you are using github as your remote git repositoryif (! (ps | ? &#123; $_.Name -eq 'ssh-agent'&#125;)) &#123; Start-SshAgent&#125;# Ensure oh-my-posh is loadedImport-Module -Name oh-my-posh# Default the prompt to agnoster oh-my-posh themeSet-Theme agnoster 声明版权： 2018-now，🇨🇳，zangjiaao&lt;zangjiaao@yahoo.com&gt;由家浩创作并维护的zangjiaao's blog博客所有文章除特别声明外，均采用&quot;创作共用保留署名-非商业-禁止演绎4.0国际许可证&quot;。本文首发于zangjiaao’s blog博客，转载请注明出处。]]></content>
      <categories>
        <category>05_日常折腾</category>
      </categories>
      <tags>
        <tag>cmder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebGoat项目搭建]]></title>
    <url>%2F2018%2F06%2F10%2FWebGoat%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[WebGoat项目搭建简介准备部署WebGoat项目声明 简介本次操作在mac下进行。主要是为了源码方式运行WebGoat/WebGoat，然后学习java代码审计。 准备jdk安装: 官网下载jdk8。然后配置环境变量，写到/etc/profile里。1export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Homemaven安装: 官网下载二进制包。建议解压到/usr/local/apache-maven中。然后配置环境变量，写到/etc/profile里。随后使用mvn -version查看一下版本。1234export M2_HOME=/usr/local/apache-maven/apache-maven-3.5.3export M2=$M2_HOME/binexport MAVEN_OPTS="-Xms256m -Xmx512m"export PATH=$M2:$PATH 部署WebGoat项目依据官网文档中的方法。下载源码:1git clone git@github.com:WebGoat/WebGoat.git部署:12cd WebGoatmvn clean installmvn编译到xxe时候会报错，提示maven-surefire-plugin的There are test failures错误(参考)，需要在pom.xml文件中build节点下plugins节点中下添加下面内容：1234567&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt; &lt;/configuration&gt;&lt;/plugin&gt;运行:WebGoat使用Spring-boot启动：1234# 运行webgoat-servermvn -pl webgoat-server spring-boot:run# 运行webwolf，注意这里的目录也是 WebGoat/mvn -pl webwolf spring-boot:runwebgoat访问地址:1http://localhost:8080/WebGoatwebwolf访问地址:1http://127.0.0.1:8081/login📖 说明： mvn参数：-am, --alsomake: 同时构建所列模块的依赖模块模块；-amd, --also-make-dependents: 同时构建依赖于所列模块的模块；-pl, --projects&lt;arg&gt;: 构建指定模块，模块间用逗号分割；-rf, -resume-from&lt;arg&gt;: 从指定的模块回复反应堆。IDEA联动: IDEA默认自带maven环境，不想用那个的话可以在IDEA中的终端，可以在设置中搜索maven更改环境路径。 声明版权： 2018-now，🇨🇳，zangjiaao&lt;zangjiaao@yahoo.com&gt;由家浩创作并维护的zangjiaao's blog博客所有文章除特别声明外，均采用&quot;创作共用保留署名-非商业-禁止演绎4.0国际许可证&quot;。本文首发于zangjiaao’s blog博客，转载请注明出处。]]></content>
      <categories>
        <category>02_环境搭建</category>
      </categories>
      <tags>
        <tag>WebGoat</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
</search>
